#!/usr/bin/env bash

# Starts a scan of available broadcasting SSIDs
# nmcli dev wifi rescan

FIELDS=SSID,SECURITY

# Supprimer toutes les lignes qui commence par --
# sed '/^--/d'

LIST=$(nmcli --fields "$FIELDS" device wifi list | sed '/^--/d')

# For some reason rofi always approximates character width 2 short.
RWIDTH=$(($(echo "$LIST" | head -n 1 | awk '{ print length($0); }') + 2))

# Dynamically change the height of the rofi menu.
LINENUM=$(echo "$LIST" | wc -l)

# Gives a list of known connections so we can parse it later.
KNOWNCON=$(nmcli connection show)

# Really janky way of telling if there is currently a connection
CONSTATE=$(nmcli -fields WIFI g)
CURRSSID=$(iwgetid -r)

# S'il n'y a pas encore de connexion en cours
if [[ ! -z $CURRSSID ]]; then
    HIGHLINE=$(echo  "$(echo "$LIST" | awk -F "[  ]{2,}" '{print $1}' | grep -Fxn -m 1 "$CURRSSID" | awk -F ":" '{print $1}') + 1" | bc)
fi

# Si on est dÃ©connectÃ©, alors on aura un menu avec une ligne, sinon on
# limite Ã Â grand maximum 8 lignes dans le cas contraire.
if [ "$LINENUM" -gt 8 ] && [[ "$CONSTATE" =~ "enabled" ]]; then
    LINENUM=8
elif [[ "$CONSTATE" =~ "disabled" ]]; then
    LINENUM=1
fi

# Si on est connectÃ©, on propose une dÃ©connection. Sinon, c'est l'inverse.
if [[ "$CONSTATE" =~ "enabled" ]]; then
    TOGGLE="toggle off"
elif [[ "$CONSTATE" =~ "disabled" ]]; then
    TOGGLE="toggle on"
fi

eval FIELDSARR=( $(cat ./config | awk 'BEGIN { FS=","; OFS="\n" } /^FIELDS/ { $1 = substr($1, 8); print $0; }') )

for i in "${!FIELDSARR[@]}"; do
    if [[ "${FIELDSARR[$i]}" = "SSID" ]]; then
	SSID_POS="${i}";
    fi
done

let AWKSSIDPOS=$SSID_POS+1

CHENTRY=$(echo -e "$TOGGLE\nmanual\n$LIST" | uniq -u |
	      rofi -location 0 -width -"$RWIDTH" -lines "$LINENUM" -dmenu -p "ðŸ“¡ WiFi SSID" -a "$HIGHLINE")

CHSSID=$(echo "$CHENTRY" | sed  's/\s\{2,\}/\|/g' | awk -F "|" '{print $'$AWKSSIDPOS'}')

# If the user inputs "manual" as their SSID in the start window, it will bring them to this screen
if [ "$CHENTRY" = "manual" ] ; then
    # Manual entry of the SSID and password (if appplicable)
    MSSID=$(echo "enter the SSID of the network (SSID,password)" | rofi -dmenu -p "Manual Entry: " -lines 1)
    # Separating the password from the entered string
    MPASS=$(echo "$MSSID" | awk -F "," '{print $2}')

    #echo "$MSSID"
    #echo "$MPASS"

    # If the user entered a manual password, then use the password nmcli command
    if [ "$MPASS" = "" ]; then
	nmcli dev wifi con "$MSSID"
    else
	nmcli dev wifi con "$MSSID" password "$MPASS"
    fi

elif [ "$CHENTRY" = "toggle on" ]; then
    nmcli radio wifi on

elif [ "$CHENTRY" = "toggle off" ]; then
    nmcli radio wifi off

else

    # If the connection is already in use, then this will still be able to get the SSID
    if [ "$CHSSID" = "*" ]; then
	CHSSID=$(echo "$CHENTRY" | sed  's/\s\{2,\}/\|/g' | awk -F "|" '{print $3}')
    fi

    # Parses the list of preconfigured connections to see if it already contains the chosen SSID. This speeds up the connection process
    if [[ $(echo "$KNOWNCON" | grep "$CHSSID") = "$CHSSID" ]]; then
	nmcli con up "$CHSSID"
    else
	if [[ "$CHENTRY" =~ "WPA2" ]] || [[ "$CHENTRY" =~ "WEP" ]]; then
	    WIFIPASS=$(echo "if connection is stored, hit enter" | rofi -dmenu -p "password: " -lines 1)
	fi
	nmcli dev wifi con "$CHSSID" password "$WIFIPASS"
    fi

fi
