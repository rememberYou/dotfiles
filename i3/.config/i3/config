### Global variables ###

# Set font for window titles.
font pango:Terminus 9

# Set window key.
set $mod Mod4

# Set navigation keys.
set $down j
set $left h
set $right l
set $up k

set $browser qutebrowser
set $locker "betterlockscreen -l dim -t \\"Don't try, you will regret it.\\"", mode "default"
set $menu rofi
set $term alacritty

### Settings ###

# Drag floating windows with $mod+mouse.
floating_modifier $mod
# The window takes the focus when an event occurs.
focus_on_window_activation focus
# Hide window borders adjacent to the screen edges.
hide_edge_borders both
# Set default border style for new windows.
new_float pixel 1
new_window pixel 1
# Switch back to the prior workspace when repeating a workspace.
workspace_auto_back_and_forth yes

### Key bindings ###

# Start a terminal.
bindsym $mod+Return exec $term
bindsym $mod+Shift+r exec $term -e "ranger"
# Start rofi.
bindsym $mod+d exec $menu -location 0 -width 30 -show "drun" -display-drun "üç¶ Application Manager:"
bindsym $mod+Shift+d exec $menu -location 0 -width 30 -show "window" -display-window "ÔÄâ Window Manager:"
bindsym $mod+Shift+f exec ~/.local/bin/rofi-finder
bindsym $mod+Shift+w exec ~/.local/bin/rofi-wifi
bindsym $mod+Shift+x exec ~/.local/bin/rofi-xrandr
# Kill focused window.
bindsym $mod+Shift+q kill
# Reload the configuration file.
bindsym $mod+Shift+c reload

# Move your focus around with $mod+hjkl or $mod+arrow.
bindsym $mod+$down focus down
bindsym $mod+$left focus left
bindsym $mod+$right focus right
bindsym $mod+$up focus up
bindsym $mod+Down focus down
bindsym $mod+Left focus left
bindsym $mod+Right focus right
bindsym $mod+Up focus up

# Move the focused window.
bindsym $mod+Shift+$down move down
bindsym $mod+Shift+$left move left
bindsym $mod+Shift+$right move right
bindsym $mod+Shift+$up move up
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Right move right
bindsym $mod+Shift+Up move up

bindsym $mod+g focus next
bindsym $mod+Shift+g focus prev

bindsym $mod+Mod1+h workspace prev_on_output
bindsym $mod+Mod1+l workspace next_on_output
bindsym $mod+Mod1+Left workspace prev_on_output
bindsym $mod+Mod1+Right workspace next_on_output

### Workspaces ###

# Global variables for workspaces.
set $ws1 "1: ÔÑ†"
set $ws2 "2: Ôâ®"
set $ws3 "3: ÔÅÑ"
set $ws4 "4: ÔÜº"
set $ws5 "5: ÔÖæ"
set $ws6 "6: Ôáº"
set $ws7 "7: ÔÜ≤"

# Define workspaces on monitors.
workspace $ws1 output eDP1
workspace $ws2 output DP1
workspace $ws3 output DP1
workspace $ws4 output DP1
workspace $ws5 output DP1
workspace $ws6 output DP1
workspace $ws7 output DP1

# Switch to workspaces.
bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace $ws5
bindsym $mod+6 workspace $ws6
bindsym $mod+7 workspace $ws7

# Move focused container to workspace.
bindsym $mod+Shift+1 move container to workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4
bindsym $mod+Shift+5 move container to workspace $ws5
bindsym $mod+Shift+6 move container to workspace $ws6
bindsym $mod+Shift+7 move container to workspace $ws7

# Assign applications to their own workspace.
assign [class="^Alacritty$"]          ‚Üí $ws1
assign [class="^qutebrowser$"]        ‚Üí $ws2
assign [class="^Chromium$"]           ‚Üí $ws2
assign [class="^Emacs$"]              ‚Üí $ws3
assign [class="^Gimp$"]               ‚Üí $ws6
assign [class="^GravitDesigner$"]     ‚Üí $ws6
assign [class="qemu-system-*"]        ‚Üí $ws7

for_window [class=.*] focus

# Fix some bug applications.
for_window [class="Spotify"] move to workspace $ws4
for_window [class="Spotify"] focus

for_window [class="Skype"] move to workspace $ws5
for_window [class="Skype"] focus

### Layout stuff ###

# Split horizontal and vertical.
bindsym $mod+b splith
bindsym $mod+v splitv

# Switch the current container between different layout styles.
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# Make the current focus fullscreen.
bindsym $mod+f fullscreen

# Toggle the current focus between tiling and floating mode.
bindsym $mod+Shift+space floating toggle

# Swap focus between the tiling area and the floating area.
bindsym $mod+space focus mode_toggle

# Move focus to the parent container.
bindsym $mod+a focus parent

### Scratchpad ###

# Move the currently focused window to the scratchpad.
bindsym $mod+Shift+t move scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
bindsym $mod+t scratchpad show

### Others ###

# Get a password with rofi from pass.
bindsym $mod+p exec ~/.local/bin/rofi-pass
# Get an emoji from emoji picker
bindsym $mod+u exec ~/.local/bin/rofi-emojis
# Get an OTP with rofi from YubiKey.
bindsym $mod+y exec ~/.local/bin/rofi-yubi

# Manage the brightness.
bindsym XF86MonBrightnessDown exec xbacklight -dec 10
bindsym XF86MonBrightnessUp exec xbacklight -inc 10

# Manage the media player.
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPlay exec playerctl play-pause
bindsym XF86AudioPrev exec playerctl previous

# Manage the audio volume.
bindsym XF86AudioMute exec pactl set-sink-mute $(pacmd list-sinks | awk '/* index:/{print $3}') toggle
bindsym XF86AudioLowerVolume exec pactl set-sink-volume $(pacmd list-sinks | awk '/* index:/{print $3}') -5%
bindsym XF86AudioRaiseVolume exec pactl set-sink-volume $(pacmd list-sinks | awk '/* index:/{print $3}') +5%

# Manage the microphone.
bindsym XF86AudioMicMute exec pulseaudio-ctl mute-input

### Different menu ###

# Power.
set $mode_power "Logout (e), system lock (l), reboot (r), suspend (s), shutdown (Shift+s)"
mode $mode_power {
# Logout the current session.
bindsym e exec i3-msg exit, mode "default"
# Lock the screen.
bindsym l exec $locker, mode "default"
# Reboot the computer.
bindsym r exec systemctl reboot, mode "default"
# Suspend the current session.
bindsym s exec systemctl suspend, mode "default"
# Shutdown the computer.
bindsym Shift+s exec systemctl poweroff -i, mode "default"

# Return to default mode.
bindsym Escape mode "default"
bindsym Return mode "default"
}

# Set power mode.
bindsym $mod+Shift+p mode $mode_power

# Resizing container.
set $mode_resize "(h) left, (j) up, (k) down, (l) right"
mode $mode_resize {
bindsym $down resize grow height 10 px or 10 ppt
bindsym $left resize grow width 10 px or 10 ppt
bindsym $right resize shrink width 10 px or 10 ppt
bindsym $up resize shrink height 10 px or 10 ppt

# Ditto, with arrow keys.
bindsym Down resize grow height 10 px or 10 ppt
bindsym Left resize shrink width 10 px or 10 ppt
bindsym Right resize grow width 10 px or 10 ppt
bindsym Up resize shrink height 10 px or 10 ppt

# Return to default mode.
bindsym Escape mode "default"
bindsym Return mode "default"
}

# Resize move.
bindsym $mod+r mode $mode_resize

# Screenshot mode.
set $mode_screenshot "Clipboard (c), full screen (f), region/window (r)"
mode $mode_screenshot {
bindsym c exec --no-startup-id maim -s -f png -m 10 | xclip -selection clipboard -t image/png, mode "default"
bindsym f exec --no-startup-id maim -f png -m 10 ~/Pictures/Screenshots/$(date '+%Y-%m-%d_%H:%M:%S').png, mode "default"
bindsym r exec --no-startup-id maim -s -f png -m 10 ~/Pictures/Screenshots/$(date '+%Y-%m-%d_%H:%M:%S').png, mode "default"

# Return to default mode.
bindsym Escape mode "default"
bindsym Return mode "default"
}

# Set screenshot mode
bindsym $mod+Shift+s mode $mode_screenshot

### Bar ###

# Colors.
# color class           border  background text    indicator
client.focused          #eee8d5 #93a1a1    #073642 #93a1a1
client.focused_inactive #657b83 #586e75    #eee8d5 #657b83
client.unfocused        #073642 #002b36    #839496 #073642
client.urgent           #cb4b16 #dc322f    #eee8d5 #dc322f

### i3-gaps ###

gaps inner 6
gaps outer 6
smart_gaps on

### Startup programs ###

exec --no-startup-id [ -f $XDG_BIN_HOME/autostart.sh ] && . "$XDG_BIN_HOME/autostart.sh"